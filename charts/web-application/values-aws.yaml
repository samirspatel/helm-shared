# AWS-specific values for the application

# Name override options
nameOverride: ""
fullnameOverride: ""

# Deployment configuration
deployment:
  replicas: 2  # Increased for HA in AWS
  
  image:
    repository: nginx
    tag: latest
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

  # Pod annotations for AWS
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
  
  # Additional labels
  labels: {}

# Service configuration
service:
  type: NodePort  # Required for ALB Ingress
  port: 80
  targetPort: 80

# Ingress configuration for AWS ALB
ingress:
  enabled: true
  className: "alb"
  annotations:
    # AWS ALB Ingress specific annotations
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: "traffic-port"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    # Security Group Settings
    alb.ingress.kubernetes.io/security-groups: ${AWS_SECURITY_GROUP_ID}
    # SSL Certificate
    alb.ingress.kubernetes.io/certificate-arn: ${AWS_CERTIFICATE_ARN}
    # Optional: WAF Association
    # alb.ingress.kubernetes.io/wafv2-acl-arn: ${AWS_WAF_ACL_ARN}
    # Tags
    alb.ingress.kubernetes.io/tags: environment=production,project=web-application

  hosts:
    - host: web-application.${AWS_DOMAIN}  # Will be replaced with actual domain
      paths:
        - path: /
          pathType: Prefix

  # TLS configuration
  tls:
    - hosts:
        - web-application.${AWS_DOMAIN}
      secretName: web-application-tls

# ConfigMap configuration
configMap:
  enabled: false
  data: {}

# Secret configuration
secret:
  enabled: false
  data: {}

# Environment variables
env:
  - name: APP_NAME
    value: "web-application"
  - name: ENVIRONMENT
    value: "production" 