name: Release Shared Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Check for chart changes
        id: check-changes
        run: |
          CHANGED_CHARTS=()
          for chart in charts/*/; do
            if git diff --quiet HEAD^ HEAD "$chart"; then
              echo "No changes in $chart"
            else
              echo "Changes detected in $chart"
              CHART_NAME=$(basename "$chart")
              CHANGED_CHARTS+=("$CHART_NAME")
              # Get current versions
              CHART_YAML="$chart/Chart.yaml"
              CURRENT_VERSION=$(grep '^version:' "$CHART_YAML" | awk '{print $2}')
              MAJOR=$(echo "$CURRENT_VERSION" | cut -d. -f1)
              MINOR=$(echo "$CURRENT_VERSION" | cut -d. -f2)
              PATCH=$(echo "$CURRENT_VERSION" | cut -d. -f3)
              
              # Bump minor version and reset patch
              NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
              
              # Update version in Chart.yaml
              sed -i "s/^version: .*/version: $NEW_VERSION/" "$CHART_YAML"
              
              # Commit the change
              git add "$CHART_YAML"
              git commit -m "chore: Bump $CHART_NAME version to $NEW_VERSION [skip ci]"
            fi
          done
          
          if [ ${#CHANGED_CHARTS[@]} -gt 0 ]; then
            echo "::set-output name=has_changes::true"
            git push
          else
            echo "::set-output name=has_changes::false"
          fi

      - name: Install Helm
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: azure/setup-helm@v3

      - name: Configure GitHub Pages
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: actions/configure-pages@v4

      - name: Package Charts
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          mkdir -p .cr-release-packages
          mkdir -p .cr-index
          # Package the chart
          helm package charts/web-application -d .cr-release-packages/
          # Create or update the index
          helm repo index .cr-release-packages/ --url https://samirspatel.github.io/helm-shared
          # Copy the index to both locations
          cp .cr-release-packages/index.yaml .cr-index/index.yaml

      - name: Create Pages Directory
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          mkdir -p .cr-pages
          # Create a simple index.html
          echo "<html><head><title>Helm Chart Repository</title></head><body><h1>Helm Chart Repository</h1><p>Add this repository to Helm:</p><pre>helm repo add helm-shared https://samirspatel.github.io/helm-shared</pre></body></html>" > .cr-pages/index.html
          # Copy chart packages and index
          cp -R .cr-release-packages/* .cr-pages/
          # Debug: List contents
          echo "Contents of .cr-pages:"
          ls -la .cr-pages/

      - name: Upload Pages Artifact
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: .cr-pages

      - name: Deploy to GitHub Pages
        if: steps.check-changes.outputs.has_changes == 'true'
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 